% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_learners.R
\name{convert_to_learners}
\alias{convert_to_learners}
\title{Converts List of Base Learner Specs into one Super Learner Spec}
\usage{
convert_to_learners(learner, npsem, use_cv_selector = F)
}
\arguments{
\item{learner}{Either an instantiated learner object, with class inheriting
from \code{\link[sl3]{Lrnr_base}}, from \pkg{sl3}, or a \code{list}. If
\code{list}, each entry can be an instantiated learner object, or can be a
list where one item is an instantiated learner object whose modeling
requires specification, and the other item is a list of character vectors,
where each vector specifies an interaction term.

@param use_cv_selector If \code{TRUE}, then will use Cross-Validation to
choose the best among a list of learners. If \code{FALSE}, then will use the default
metalearner for the outcome type.
If the \code{learner} argument is not a list but one instantiated learner object,
then this argument is ignored.}
}
\value{
an instantiated learner object, with class inheriting from
\code{\link[sl3]{Lrnr_base}}, from \pkg{sl3}.
}
\description{
The "Learner Spec" objects in both \code{\link{sherlock_calculate}} and
\code{\link{est_cate}} can be an instantiated learner object, or a
\code{list} of learners to be instantiated. To use base learners that
require model specification (e.g., GLMs or regularized regression), then we
need to specify the interaction terms using the original column names from
the input dataset. This internal function converts those names to the
abstracted names.
}
\keyword{internal}
